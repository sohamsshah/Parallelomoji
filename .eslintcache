[{"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\emojipedia.js":"4","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Card\\Card.jsx":"5","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Emoji\\Emoji.jsx":"6","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Navbar\\Navbar.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":3143,"mtime":1608449775231,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":421973,"mtime":1608449579832,"results":"12","hashOfConfig":"9"},{"size":469,"mtime":1608412017942,"results":"13","hashOfConfig":"9"},{"size":164,"mtime":1608410023553,"results":"14","hashOfConfig":"9"},{"size":708,"mtime":1608451712702,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1sdz3ta",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\index.js",[],["32","33"],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\App.js",["34","35"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {emojiDictionary, getRandomEmojis, searchEmoji} from \"./emojipedia\";\nimport Card from \"./components/Card/Card\";\nimport Navbar from './components/Navbar/Navbar'\nconst randomEmojis = getRandomEmojis();\n\nfunction App() {\n  const [emoji, setEmoji] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"translation will appear here...\");\n  const [parallelEmoji, setParallelEmoji] = useState(\"\");\n  const [parallelMeaning, setparallelMeaning] = useState(\"...here appear will translation\");\n  \n  function changeHandler(event) {\n    const inputEmoji = event.target.value;\n    let emojiObj = searchEmoji(inputEmoji, false);\n    setEmoji(emojiObj.emoji);\n    let parallelEmojiObj = searchEmoji(inputEmoji, true);\n    setParallelEmoji(parallelEmojiObj.emoji);\n    if(emojiObj === \"not found\"){\n      setMeaning(\"Invalid emoji üòÖ\")\n      setparallelMeaning(\"Invalid emoji üòÖ\")\n    }\n    else if(emojiObj === \"empty\"){\n      setMeaning(\"translation will appear here...\")\n      setparallelMeaning(\"translation will appear here...\")\n    }else{\n      setMeaning(emojiObj.description);\n      setparallelMeaning(parallelEmojiObj.description);\n    }\n  }\n  function emojiClickHandler(inputEmoji) {\n    let emojiObj = searchEmoji(inputEmoji, false);\n    setEmoji(emojiObj.emoji);\n    let parallelEmojiObj = searchEmoji(inputEmoji, true);\n    setParallelEmoji(parallelEmojiObj.emoji);\n    if(emojiObj === \"\"){\n      setMeaning(\"Invalid emoji üòÖ\")\n      setparallelMeaning(\"Invalid emoji üòÖ\")\n    }else{\n      setMeaning(emojiObj.description);\n      setparallelMeaning(parallelEmojiObj.description);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        <img\n          className=\"logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/en/0/03/Emojipedia_logo.png\"\n        ></img>\n        <h1>\n          {\" \"}\n          Parallelo<span className=\"heading-design\">mojipedia</span>\n        </h1>\n        <input\n          onChange={changeHandler}\n          className=\"input\"\n          placeholder=\"Enter your emoji here\"\n        ></input>\n        <span>\n          {/* <button className=\"search-form__button\" aria-label=\"search\">\n            üîç\n          </button> */}\n        </span>\n        <div\n          style={{\n            textAlign: \"center\",\n            display: \"flex\",\n            padding: \"2rem\",\n            justifyContent: \"center\"\n          }}\n        >\n          <div style={{ paddingRight: \"2.5rem\" }}>\n            <Card emoji={emoji} meaning={meaning} parallel={false} />\n          </div>\n          <div style={{ paddingLeft: \"2.5rem\" }}>\n            <Card emoji={parallelEmoji} meaning={parallelMeaning} parallel={true} />\n          </div>\n        </div>\n        <h2> Some Common Emojis </h2>\n        {randomEmojis.map((emoji) => (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n          >\n            {\" \"}\n            {emoji}{\" \"}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\emojipedia.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Card\\Card.jsx",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Emoji\\Emoji.jsx",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Navbar\\Navbar.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":3,"column":9,"nodeType":"42","messageId":"43","endLine":3,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":49,"column":9,"nodeType":"46","endLine":52,"endColumn":10},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'emojiDictionary' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]