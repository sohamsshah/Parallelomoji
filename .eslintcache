[{"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\emojipedia.js":"4","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Card\\Card.jsx":"5","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Emoji\\Emoji.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":2112,"mtime":1608399330199,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":264,"mtime":1608398689753,"results":"11","hashOfConfig":"8"},{"size":338,"mtime":1608399292070,"results":"12","hashOfConfig":"8"},{"size":152,"mtime":1608399251821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1sdz3ta",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\index.js",[],["28","29"],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\App.js",["30"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport emojiDictionary from \"./emojipedia\";\nimport Card from \"./components/Card/Card\";\nconst emojis = Object.keys(emojiDictionary);\n\nfunction App() {\n  const [emoji, setEmoji] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"translation will appear here...\");\n\n  function changeHandler(event) {\n    const inputEmoji = event.target.value;\n    setEmoji(inputEmoji);\n\n    if (inputEmoji in emojiDictionary) {\n      setMeaning(emojiDictionary[inputEmoji]);\n    } else {\n      setMeaning(\"failure to recognise this emoji\");\n    }\n  }\n  function emojiClickHandler(inputEmoji) {\n    setEmoji(inputEmoji);\n    setMeaning(emojiDictionary[inputEmoji]);\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/en/0/03/Emojipedia_logo.png\"\n        ></img>\n        <h1>\n          {\" \"}\n          Parallelo<span className=\"heading-design\">mojipedia</span>\n        </h1>\n        <input\n          onChange={changeHandler}\n          className=\"input\"\n          placeholder=\"Enter your emoji here\"\n        ></input>\n        <span>\n          <button className=\"search-form__button\" aria-label=\"search\">\n            üîç\n          </button>\n        </span>\n        <div\n          style={{\n            textAlign: \"center\",\n            display: \"flex\",\n            padding: \"2rem\",\n            justifyContent: \"center\"\n          }}\n        >\n          <div style={{ paddingRight: \"2.5rem\" }}>\n            <Card emoji={emoji} meaning={meaning} />\n          </div>\n          <div style={{ paddingLeft: \"2.5rem\" }}>\n            <Card emoji={emoji} meaning={meaning} />\n          </div>\n        </div>\n        <h2> Some Common Emojis </h2>\n        {emojis.map((emoji) => (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n          >\n            {\" \"}\n            {emoji}{\" \"}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\emojipedia.js",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Card\\Card.jsx",[],"C:\\Users\\HP\\OneDrive\\Desktop\\Github\\myapp\\src\\components\\Emoji\\Emoji.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":28,"column":9,"nodeType":"37","endLine":31,"endColumn":10},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]